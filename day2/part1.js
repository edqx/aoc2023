/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI520093723 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI520093699 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI654311830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI654311797 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217736.base = NTI33555179;
NTI654311797.base = NTI33554449;
NTI654311830.base = NTI33554449;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
NTI134217746.base = NTI33555179;
var NNI520093699 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "red", len: 0, typ: NTI33554435, name: "red", sons: null}, 
{kind: 1, offset: "green", len: 0, typ: NTI33554435, name: "green", sons: null}, 
{kind: 1, offset: "blue", len: 0, typ: NTI33554435, name: "blue", sons: null}]};
NTI520093699.node = NNI520093699;
NTI520093723.base = NTI520093699;
var NNI520093722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI520093723, name: "Field1", sons: null}]};
NTI520093722.node = NNI520093722;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}
    var FormatOpen_503316899 = ["rb", "wb", "w+b", "r+b", "ab"];

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\os.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\os.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__520093925 = 0;
      colontmp__520093925 = (i_33556519 - 1);
      var res_520093927 = colontmp__520093925;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_520093927)) break Label7;
            j_33556554 = res_520093927;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_520093927 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093920 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_520093920 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_520093920;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093920 = addInt(i_520093920, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function open_503316900(f_503316901, f_503316901_Idx, filename_503316902, mode_503316903, bufSize_503316904) {
    var Temporary1;

  var result_503316905 = false;

  var F = {procname: "syncio.open", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 702;
    F.filename = "syncio.nim";
    var p_503316906 = (Temporary1 = fopen(toJSStr(filename_503316902), FormatOpen_503316899[chckIndx(mode_503316903, 0, (FormatOpen_503316899).length - 1)]), Temporary1)[0], p_503316906_Idx = Temporary1[1];
    if (!((p_503316906 == null && p_503316906_Idx == 0))) {
    F.line = 704;
    var f2_503316907 = p_503316906;
    F.line = 719;
    result_503316905 = true;
    F.line = 720;
    f_503316901[f_503316901_Idx] = p_503316906;
    if (((0 < bufSize_503316904) && ((bufSize_503316904 >>> 0) <= 4294967295))) {
    F.line = 722;
    var _ = setvbuf(f_503316901[f_503316901_Idx], null, 0, _IOFBF, Number(BigInt.asUintN(32, BigInt(bufSize_503316904))));
    }
    else {
    if ((bufSize_503316904 == 0)) {
    F.line = 724;
    var _ = setvbuf(f_503316901[f_503316901_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    
  framePtr = F.prev;

  return result_503316905;

}

function rawFileSize_503316865(file_503316866) {
  var result_503316867 = 0n;

  var F = {procname: "syncio.rawFileSize", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 559;
    F.filename = "syncio.nim";
    var oldPos_503316868 = ftello(file_503316866);
    F.line = 560;
    var _ = fseeko(file_503316866, 0n, 2);
    F.line = 561;
    result_503316867 = ftello(file_503316866);
    F.line = 562;
    var _ = fseeko(file_503316866, oldPos_503316868, 0);
  framePtr = F.prev;

  return result_503316867;

}

function raiseEIO_503316567(msg_503316568) {
  var F = {procname: "syncio.raiseEIO", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 158;
    F.filename = "syncio.nim";
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
  framePtr = F.prev;

  
}

function checkErr_503316648(f_503316649) {
  var F = {procname: "syncio.checkErr", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    if (!((ferror(f_503316649) == 0))) {
    F.line = 173;
    F.filename = "syncio.nim";
    var msg_503316650 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    F.line = 174;
    clearerr(f_503316649);
    F.line = 175;
    raiseEIO_503316567(msg_503316650);
    }
    
  framePtr = F.prev;

  
}

function readBuffer_503316651(f_503316652, buffer_503316653, buffer_503316653_Idx, len_503316654) {
  var result_503316655 = 0;

    result_503316655 = Number(BigInt.asIntN(32, BigInt(fread(buffer_503316653, buffer_503316653_Idx, 1, Number(BigInt.asUintN(32, BigInt(len_503316654))), f_503316652))));
    if (!((result_503316655 == len_503316654))) {
    checkErr_503316648(f_503316652);
    }
    

  return result_503316655;

}

function endOfFile_503316869(f_503316870) {
  var result_503316871 = false;

  var F = {procname: "syncio.endOfFile", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 566;
    F.filename = "syncio.nim";
    var c_503316872 = fgetc(f_503316870);
    F.line = 567;
    var _ = ungetc(c_503316872, f_503316870);
    F.line = 568;
    result_503316871 = (c_503316872 < 0);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_503316871;

}

function readAllBuffer_503316860(file_503316861) {
  var result_503316862 = [];

  var F = {procname: "syncio.readAllBuffer", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 546;
    F.filename = "syncio.nim";
    result_503316862 = nimCopy(null, [], NTI33554449);
    F.line = 547;
    var buffer_503316863 = mnewString(4000);
    Label1: {
      F.line = 548;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 549;
          var bytesRead_503316864 = readBuffer_503316651(file_503316861, buffer_503316863, chckIndx(0, 0, (buffer_503316863).length - 1), 4000);
          if ((bytesRead_503316864 == 4000)) {
          F.line = 551;
          result_503316862.push.apply(result_503316862, buffer_503316863);;
          }
          else {
            F.line = 553;
            if (buffer_503316863.length < chckRange(bytesRead_503316864, 0, 2147483647)) { for (var i = buffer_503316863.length; i < chckRange(bytesRead_503316864, 0, 2147483647); ++i) buffer_503316863.push(0); }
         else {buffer_503316863.length = chckRange(bytesRead_503316864, 0, 2147483647); };
            F.line = 554;
            result_503316862.push.apply(result_503316862, buffer_503316863);;
            F.line = 555;
            break Label1;
          }
          
        }
    };
  framePtr = F.prev;

  return result_503316862;

}

function readAllFile_503316873(file_503316874, len_503316875) {
  var result_503316876 = [];

  var F = {procname: "syncio.readAllFile", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 574;
    F.filename = "syncio.nim";
    result_503316876 = nimCopy(null, mnewString(chckRange(Number(len_503316875), 0, 2147483647)), NTI33554449);
    F.line = 575;
    var bytes_503316877 = readBuffer_503316651(file_503316874, result_503316876, chckIndx(0, 0, (result_503316876).length - 1), chckRange(Number(len_503316875), 0, 2147483647));
    if (endOfFile_503316869(file_503316874)) {
    if ((BigInt(bytes_503316877) < len_503316875)) {
    F.line = 578;
    if (result_503316876.length < chckRange(bytes_503316877, 0, 2147483647)) { for (var i = result_503316876.length; i < chckRange(bytes_503316877, 0, 2147483647); ++i) result_503316876.push(0); }
         else {result_503316876.length = chckRange(bytes_503316877, 0, 2147483647); };
    }
    
    }
    else {
      F.line = 582;
    result_503316876.push.apply(result_503316876, readAllBuffer_503316860(file_503316874));;
    }
    
  framePtr = F.prev;

  return result_503316876;

}

function readAll_503316882(file_503316883) {
  var result_503316884 = [];

  var F = {procname: "syncio.readAll", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 599;
    F.filename = "syncio.nim";
    var len_503316885 = rawFileSize_503316865(file_503316883);
    if ((0n < len_503316885)) {
    F.line = 601;
    result_503316884 = nimCopy(null, readAllFile_503316873(file_503316883, len_503316885), NTI33554449);
    }
    else {
      F.line = 603;
      result_503316884 = nimCopy(null, readAllBuffer_503316860(file_503316883), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_503316884;

}

function close_503316741(f_503316742) {
  var F = {procname: "syncio.close", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    if (!((f_503316742 == null))) {
    F.line = 329;
    F.filename = "syncio.nim";
    var _ = fclose(f_503316742);
    }
    
  framePtr = F.prev;

  
}

function readFile_503316980(filename_503316981) {
  var result_503316982 = [];

  var F = {procname: "syncio.readFile", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\syncio.nim", line: 0};
  framePtr = F;
    F.line = 848;
    F.filename = "syncio.nim";
    var f_503316983 = [null];
    if (open_503316900(f_503316983, 0, filename_503316981, 0, (-1))) {
    F.line = 850;
    try {
    F.line = 851;
    result_503316982 = nimCopy(null, readAll_503316882(f_503316983[0]), NTI33554449);
    } finally {
    framePtr = F;
    F.line = 853;
    close_503316741(f_503316983[0]);
    }
    }
    else {
      F.line = 855;
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316981 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
  framePtr = F.prev;

  return result_503316982;

}

function paramStr_1140850747(i_1140850748) {
      var Temporary1;

  var result_1140850749 = [];

  var F = {procname: "cmdline.paramStr", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\cmdline.nim", line: 0};
  framePtr = F;
    F.line = 215;
    F.filename = "cmdline.nim";
    var i_1140850750 = addInt(i_1140850748, 1);
    if (((i_1140850750 < process.argv.length) && (0 <= i_1140850750))) {
    F.line = 217;
    result_1140850749 = nimCopy(null, cstrToNimstr(process.argv[i_1140850750]), NTI33554449);
    }
    else {
      if ((subInt(process.argv.length, 2) < 0)) {
      Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
      }
      else {
      Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(subInt(i_1140850750, 1)) || [],[32,110,111,116,32,105,110,32,48,32,46,46,32] || [],HEX24_369098760(subInt(process.argv.length, 2)) || []);
      }
      
      F.line = 219;
      raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
  framePtr = F.prev;

  return result_1140850749;

}

function substr_33558078(s_33558079, first_33558080, last_33558081) {
  var result_33558082 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558083 = nimMax(first_33558080, 0);
    F.line = 2659;
    var L_33558084 = nimMax(addInt(subInt(nimMin(last_33558081, (s_33558079).length - 1), first_33558083), 1), 0);
    F.line = 2660;
    result_33558082 = nimCopy(null, mnewString(chckRange(L_33558084, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558089 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__520093939 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__520093939 = subInt(L_33558084, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_520093940 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_520093940 <= colontmp__520093939)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558089 = res_520093940;
            F.line = 2661;
            result_33558082[chckIndx(i_33558089, 0, (result_33558082).length - 1)] = s_33558079[chckIndx(addInt(i_33558089, first_33558083), 0, (s_33558079).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_520093940 = addInt(res_520093940, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558082;

}

function nsuSplitChar(s_654311969, sep_654311970, maxsplit_654311971) {
  var result_654311972 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_654311972 = nimCopy(null, [], NTI654311797);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_654311978 = [];
      F.line = 389;
      var lastHEX60gensym34_520093933 = 0;
      F.line = 390;
      var splitsHEX60gensym34_520093934 = maxsplit_654311971;
      Label2: {
        F.line = 450;
          Label3: while (true) {
          if (!(lastHEX60gensym34_520093933 <= (s_654311969).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_520093936 = lastHEX60gensym34_520093933;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_520093933 < (s_654311969).length) && !((s_654311969[chckIndx(lastHEX60gensym34_520093933, 0, (s_654311969).length - 1)] == sep_654311970)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_520093933 = addInt(lastHEX60gensym34_520093933, 1);
                }
            };
            if ((splitsHEX60gensym34_520093934 == 0)) {
            F.line = 396;
            lastHEX60gensym34_520093933 = (s_654311969).length;
            }
            
            F.line = 743;
            xHEX60gensym67_654311978 = substr_33558078(s_654311969, firstHEX60gensym34_520093936, subInt(lastHEX60gensym34_520093933, 1));
            F.line = 743;
            var Temporary6 = nimCopy(null, xHEX60gensym67_654311978, NTI33554449);
            result_654311972.push(Temporary6);;
            if ((splitsHEX60gensym34_520093934 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_520093934 = subInt(splitsHEX60gensym34_520093934, 1);
            F.line = 400;
            lastHEX60gensym34_520093933 = addInt(lastHEX60gensym34_520093933, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_654311972;

}

function substrEq_654311679(s_654311680, pos_654311681, substr_654311682) {
    var Temporary1;

  var result_654311683 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_654311684 = (substr_654311682).length;
    if ((0 < length_654311684)) {
    F.line = 372;
    var i_654311685 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_654311685 < length_654311684) && (addInt(pos_654311681, i_654311685) < (s_654311680).length)) && (s_654311680[chckIndx(addInt(pos_654311681, i_654311685), 0, (s_654311680).length - 1)] == substr_654311682[chckIndx(i_654311685, 0, (substr_654311682).length - 1)]))) break Label3;
          F.line = 374;
          i_654311685 = addInt(i_654311685, 1);
        }
    };
    Temporary1 = (i_654311685 == length_654311684);
    }
    else {
    Temporary1 = false;
    }
    
    result_654311683 = Temporary1;
  framePtr = F.prev;

  return result_654311683;

}

function nsuSplitString(s_654311999, sep_654312000, maxsplit_654312001) {
      var Temporary2;

  var result_654312002 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_654312002 = nimCopy(null, [], NTI654311830);
    Label1: {
      F.line = 418;
      var xHEX60gensym69_654312008 = [];
      F.line = 529;
      if (((sep_654312000).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_654312000).length;
      }
      
      var sepLen_520093947 = Temporary2;
      F.line = 389;
      var lastHEX60gensym41_520093948 = 0;
      F.line = 390;
      var splitsHEX60gensym41_520093949 = maxsplit_654312001;
      Label3: {
        F.line = 531;
          Label4: while (true) {
          if (!(lastHEX60gensym41_520093948 <= (s_654311999).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym41_520093951 = lastHEX60gensym41_520093948;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym41_520093948 < (s_654311999).length) && !(substrEq_654311679(s_654311999, lastHEX60gensym41_520093948, sep_654312000)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym41_520093948 = addInt(lastHEX60gensym41_520093948, 1);
                }
            };
            if ((splitsHEX60gensym41_520093949 == 0)) {
            F.line = 396;
            lastHEX60gensym41_520093948 = (s_654311999).length;
            }
            
            F.line = 787;
            xHEX60gensym69_654312008 = substr_33558078(s_654311999, firstHEX60gensym41_520093951, subInt(lastHEX60gensym41_520093948, 1));
            F.line = 787;
            var Temporary7 = nimCopy(null, xHEX60gensym69_654312008, NTI33554449);
            result_654312002.push(Temporary7);;
            if ((splitsHEX60gensym41_520093949 == 0)) {
            F.line = 398;
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym41_520093949 = subInt(splitsHEX60gensym41_520093949, 1);
            F.line = 400;
            lastHEX60gensym41_520093948 = addInt(lastHEX60gensym41_520093948, sepLen_520093947);
          }
      };
    };
  framePtr = F.prev;

  return result_654312002;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_671088965() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_671089003(s_671089004, b_671089005, b_671089005_Idx) {
      var Temporary1;
          var Temporary4;

  var result_671089006 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    var sign_671089007 = (-1n);
    F.line = 430;
    var i_671089008 = 0;
    if ((i_671089008 < (s_671089004).length)) {
    if ((s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)] == 43)) {
    F.line = 432;
    i_671089008 += 1;
    }
    else {
    if ((s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)] == 45)) {
    F.line = 434;
    i_671089008 += 1;
    F.line = 435;
    sign_671089007 = 1n;
    }
    }
    }
    
      if (!(i_671089008 < (s_671089004).length)) Temporary1 = false; else {        Temporary1 = (ConstSet2[s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_671089005[b_671089005_Idx] = 0n;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_671089008 < (s_671089004).length)) Temporary4 = false; else {            Temporary4 = (ConstSet3[s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_671089042 = (s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_671089042)) / 10n <= b_671089005[b_671089005_Idx])) {
          F.line = 441;
          b_671089005[b_671089005_Idx] = ((b_671089005[b_671089005_Idx] * 10n) - BigInt(c_671089042));
          }
          else {
            F.line = 443;
          integerOutOfRangeError_671088965();
          }
          
          F.line = 444;
          i_671089008 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_671089008 < (s_671089004).length) && (s_671089004[chckIndx(i_671089008, 0, (s_671089004).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_671089008 += 1;
              }
          };
        }
    };
    if (((sign_671089007 == (-1n)) && (b_671089005[b_671089005_Idx] == (-9223372036854775808n)))) {
    F.line = 447;
    integerOutOfRangeError_671088965();
    }
    else {
      F.line = 449;
      b_671089005[b_671089005_Idx] = (b_671089005[b_671089005_Idx] * sign_671089007);
      F.line = 450;
      result_671089006 = i_671089008;
    }
    
    }
    
  framePtr = F.prev;

  return result_671089006;

}

function npuParseBiggestInt(s_671089065, number_671089066, number_671089066_Idx) {
  var result_671089067 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    F.filename = "parseutils.nim";
    var res_671089068 = [0n];
    F.line = 467;
    result_671089067 = rawParseInt_671089003(s_671089065, res_671089068, 0);
    if (!((result_671089067 == 0))) {
    F.line = 469;
    number_671089066[number_671089066_Idx] = res_671089068[0];
    }
    
  framePtr = F.prev;

  return result_671089067;

}

function npuParseInt(s_671089070, number_671089071, number_671089071_Idx) {
  var result_671089072 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    F.filename = "parseutils.nim";
    var res_671089073 = [0n];
    F.line = 483;
    result_671089072 = npuParseBiggestInt(s_671089070, res_671089073, 0);
    if (((res_671089073[0] < (-2147483648n)) || (2147483647n < res_671089073[0]))) {
    F.line = 486;
    integerOutOfRangeError_671088965();
    }
    
    if (!((result_671089072 == 0))) {
    F.line = 488;
    number_671089071[number_671089071_Idx] = chckRange(Number(res_671089073[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_671089072;

}

function parseInt_671089583(s_671089584, number_671089585, number_671089585_Idx, start_671089586) {
  var result_671089587 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "parseutils.nim";
    result_671089587 = npuParseInt((s_671089584.slice(start_671089586, (s_671089584).length - 1 + 1)), number_671089585, number_671089585_Idx);
  framePtr = F.prev;

  return result_671089587;

}

function nsuParseInt(s_654312281) {
  var result_654312282 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 1134;
    F.filename = "strutils.nim";
    result_654312282[0] = 0;
    F.line = 1135;
    var L_654312283 = parseInt_671089583(s_654312281, result_654312282, 0, 0);
    if ((!((L_654312283 == (s_654312281).length)) || (L_654312283 == 0))) {
    F.line = 1137;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_654312281 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_654312282[0];

}

function map_520093749(s_520093752, op_520093754) {
  var result_520093755 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 397;
    F.filename = "sequtils.nim";
    result_520093755 = new Array(chckRange((s_520093752).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_520093752).length, 0, 2147483647) ; ++i) { result_520093755[i] = ({red: 0, green: 0, blue: 0}); }    Label1: {
      F.line = 398;
      var i_520093770 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__520093957 = 0;
      F.line = 398;
      F.filename = "sequtils.nim";
      colontmp__520093957 = (s_520093752).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093958 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520093958 < colontmp__520093957)) break Label3;
            F.line = 398;
            F.filename = "sequtils.nim";
            i_520093770 = i_520093958;
            F.line = 398;
            result_520093755[chckIndx(i_520093770, 0, (result_520093755).length - 1)] = nimCopy(result_520093755[chckIndx(i_520093770, 0, (result_520093755).length - 1)], op_520093754(s_520093752[chckIndx(i_520093770, 0, (s_520093752).length - 1)]), NTI520093699);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093958 = addInt(i_520093958, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_520093755;

}

function parse_as_hand_520093704(hand_520093705, round_520093706) {
  var F = {procname: "part1.parse_as_hand", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
  framePtr = F;
    F.line = 11;
    F.filename = "part1.nim";
    var parts_520093707 = nsuSplitChar(hand_520093705, 32, (-1));
    if (eqStrings(parts_520093707[chckIndx(1, 0, (parts_520093707).length - 1)], [114,101,100])) {
    F.line = 12;
    round_520093706.red = nsuParseInt(parts_520093707[chckIndx(0, 0, (parts_520093707).length - 1)]);
    }
    
    if (eqStrings(parts_520093707[chckIndx(1, 0, (parts_520093707).length - 1)], [103,114,101,101,110])) {
    F.line = 13;
    round_520093706.green = nsuParseInt(parts_520093707[chckIndx(0, 0, (parts_520093707).length - 1)]);
    }
    
    if (eqStrings(parts_520093707[chckIndx(1, 0, (parts_520093707).length - 1)], [98,108,117,101])) {
    F.line = 14;
    round_520093706.blue = nsuParseInt(parts_520093707[chckIndx(0, 0, (parts_520093707).length - 1)]);
    }
    
  framePtr = F.prev;

  
}

function parse_as_round_520093708(roundString_520093709) {
  var result_520093710 = [({red: 0, green: 0, blue: 0})];

  var F = {procname: "part1.parse_as_round", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "part1.nim";
    var handStrings_520093711 = nsuSplitString(roundString_520093709, [44,32], (-1));
    if ((0 < (handStrings_520093711).length)) {
    F.line = 18;
    parse_as_hand_520093704(handStrings_520093711[chckIndx(0, 0, (handStrings_520093711).length - 1)], result_520093710[0]);
    }
    
    if ((1 < (handStrings_520093711).length)) {
    F.line = 19;
    parse_as_hand_520093704(handStrings_520093711[chckIndx(1, 0, (handStrings_520093711).length - 1)], result_520093710[0]);
    }
    
    if ((2 < (handStrings_520093711).length)) {
    F.line = 20;
    parse_as_hand_520093704(handStrings_520093711[chckIndx(2, 0, (handStrings_520093711).length - 1)], result_520093710[0]);
    }
    
  framePtr = F.prev;

  return result_520093710[0];

}

function parse_as_game_520093721(gameString_520093722) {
    var Temporary1;
    
function HEX3Aanonymous_520093727(x_520093728) {
      var result_520093729 = ({red: 0, green: 0, blue: 0});

      var F = {procname: "parse_as_game.:anonymous", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
      framePtr = F;
        F.line = 26;
        F.filename = "part1.nim";
        result_520093729 = nimCopy(result_520093729, parse_as_round_520093708(x_520093728), NTI520093699);
      framePtr = F.prev;

      return result_520093729;

    }

  var result_520093723 = {Field0: 0, Field1: []};

  var F = {procname: "part1.parse_as_game", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 23;
    F.filename = "part1.nim";
    var parts_520093724 = nsuSplitString(gameString_520093722, [58,32], (-1));
    F.line = 24;
    var gameId_520093725 = nsuParseInt((Temporary1 = nsuSplitChar(parts_520093724[chckIndx(0, 0, (parts_520093724).length - 1)], 32, (-1)), Temporary1)[chckIndx(1, 0, (Temporary1).length - 1)]);
    F.line = 25;
    var roundStrings_520093726 = nsuSplitString(parts_520093724[chckIndx(1, 0, (parts_520093724).length - 1)], [59,32], (-1));
    F.line = 26;
    var colontmp__520093942 = gameId_520093725;
    F.line = 26;
    var colontmp__520093943 = map_520093749(roundStrings_520093726, HEX3Aanonymous_520093727);
    F.line = 26;
    result_520093723 = nimCopy(result_520093723, {Field0: colontmp__520093942, Field1: nimCopy(null, colontmp__520093943, NTI520093723)}, NTI520093722);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093723;

}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\system\\fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "C:\\Program Files\\nim-2.0.0\\lib\\std\\assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function is_game_valid_520093835(gameRounds_520093836, limits_520093837) {
  var result_520093838 = false;

  var F = {procname: "part1.is_game_valid", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    Label1: {
      F.line = 29;
      F.filename = "part1.nim";
      var round_520093861 = ({red: 0, green: 0, blue: 0});
      F.line = 241;
      F.filename = "iterators.nim";
      var i_520093962 = 0;
      F.line = 242;
      var L_520093963 = (gameRounds_520093836).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_520093962 < L_520093963)) break Label3;
            F.line = 29;
            F.filename = "part1.nim";
            round_520093861 = gameRounds_520093836[chckIndx(i_520093962, 0, (gameRounds_520093836).length - 1)];
            if ((limits_520093837.red < round_520093861.red)) {
            F.line = 30;
            result_520093838 = false;
            break BeforeRet;
            }
            
            if ((limits_520093837.green < round_520093861.green)) {
            F.line = 31;
            result_520093838 = false;
            break BeforeRet;
            }
            
            if ((limits_520093837.red < round_520093861.red)) {
            F.line = 32;
            result_520093838 = false;
            break BeforeRet;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_520093962 = addInt(i_520093962, 1);
            if (!(((gameRounds_520093836).length == L_520093963))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("C:\\Program Files\\nim-2.0.0\\lib\\system\\iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 33;
    F.filename = "part1.nim";
    result_520093838 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093838;

}
var F = {procname: "module part1", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
framePtr = F;
F.line = 35;
F.filename = "part1.nim";
var fileData_520093878 = [readFile_503316980(paramStr_1140850747(1))];
F.line = 36;
var gameStrings_520093879 = [nsuSplitChar(fileData_520093878[0], 10, (-1))];
F.line = 37;
var limits_520093880 = [{red: 12, green: 13, blue: 14}];
F.line = 38;
var gameIdTotal_520093881 = [0];
Label1: {
  F.line = 39;
  var gameString_520093903 = [[]];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_520093911 = 0;
  F.line = 242;
  var L_520093912 = (gameStrings_520093879[0]).length;
  Label2: {
    F.line = 243;
      Label3: while (true) {
      if (!(i_520093911 < L_520093912)) break Label3;
        F.line = 39;
        F.filename = "part1.nim";
        gameString_520093903[0] = gameStrings_520093879[0][chckIndx(i_520093911, 0, (gameStrings_520093879[0]).length - 1)];
        F.line = 40;
        var game_520093904 = [parse_as_game_520093721(gameString_520093903[0])];
        if (is_game_valid_520093835(game_520093904[0]["Field1"], limits_520093880[0])) {
        F.line = 42;
        gameIdTotal_520093881[0] = addInt(gameIdTotal_520093881[0], game_520093904[0]["Field0"]);
        }
        
        F.line = 245;
        F.filename = "iterators.nim";
        i_520093911 = addInt(i_520093911, 1);
        if (!(((gameStrings_520093879[0]).length == L_520093912))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("C:\\Program Files\\nim-2.0.0\\lib\\system\\iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
F.line = 44;
F.filename = "part1.nim";
rawEcho(HEX24_369098760(gameIdTotal_520093881[0]));
framePtr = F.prev;
var F = {procname: "module part1", prev: framePtr, filename: "C:\\Users\\Edward\\Documents\\Projects\\aoc2023\\day2\\part1.nim", line: 0};
framePtr = F;
framePtr = F.prev;
